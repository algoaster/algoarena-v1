{
  "name": "Workflow B: Sync Data Pipeline",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 5
            }
          ]
        }
      },
      "id": "cron-trigger",
      "name": "Every 5 Seconds",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "url": "http://trading-core:8000/positions",
        "method": "GET",
        "options": {}
      },
      "id": "http-positions",
      "name": "Fetch Positions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 200]
    },
    {
      "parameters": {
        "url": "http://trading-core:8000/orders",
        "method": "GET",
        "options": {}
      },
      "id": "http-orders",
      "name": "Fetch Orders",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 350]
    },
    {
      "parameters": {
        "url": "http://trading-core:8000/pnl?window=daily",
        "method": "GET",
        "options": {}
      },
      "id": "http-pnl",
      "name": "Fetch PnL Metrics",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 500]
    },
    {
      "parameters": {
        "functionCode": "const positions = $node['Fetch Positions'].json.positions || [];\nconst orders = $node['Fetch Orders'].json.orders || [];\nconst metrics = $node['Fetch PnL Metrics'].json.metrics || [];\n\nconst snapshot = {\n  timestamp: new Date().toISOString(),\n  positions: positions,\n  orders: orders.slice(0, 100),\n  metrics: metrics\n};\n\nreturn { json: snapshot };"
      },
      "id": "merge-data",
      "name": "Merge Data Snapshot",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 350]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO snapshots (ts, data) VALUES (NOW(), $1::jsonb) ON CONFLICT DO NOTHING",
        "options": {}
      },
      "id": "postgres-write",
      "name": "Write to Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [850, 350],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "PostgreSQL account"
        }
      }
    }
  ],
  "connections": {
    "Every 5 Seconds": {
      "main": [
        [
          {
            "node": "Fetch Positions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Orders",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch PnL Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Positions": {
      "main": [
        [
          {
            "node": "Merge Data Snapshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Orders": {
      "main": [
        [
          {
            "node": "Merge Data Snapshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch PnL Metrics": {
      "main": [
        [
          {
            "node": "Merge Data Snapshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Data Snapshot": {
      "main": [
        [
          {
            "node": "Write to Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-22T00:00:00.000Z",
  "versionId": "1"
}
