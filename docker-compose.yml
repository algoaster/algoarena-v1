version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: grid-postgres
    environment:
      POSTGRES_USER: tradeuser
      POSTGRES_PASSWORD: tradepass
      POSTGRES_DB: trade
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tradeuser"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: grid-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: grid-n8n
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_PORT=5678
      - WEBHOOK_URL=${N8N_PROTOCOL:-http}://${N8N_HOST:-localhost}:5678/
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - EXECUTIONS_MODE=regular
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/workflows
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  trading-core:
    build:
      context: ./trading-core
      dockerfile: Dockerfile
    container_name: grid-trading-core
    env_file:
      - ./trading-core/.env
    ports:
      - "8000:8000"
    volumes:
      - ./trading-core:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: poetry run fastapi run app/main.py --host 0.0.0.0 --port 8000

  caddy:
    image: caddy:2-alpine
    container_name: grid-caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - trading-core
      - n8n
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  caddy_data:
  caddy_config:
